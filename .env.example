# Fast posting defaults (tune per deployment)

# Parent & Fanout
FANOUT_ALWAYS_PARENT=1
FANOUT_MIRROR_TO_PARENT=1
MONO_QUARANTINE_DISABLE=1

# Hot tiers / intervals
TIER_HOT_GLOBS=*-all,*-all-*â‚¬
T0_TARGET_SEC=6
T1_TARGET_SEC=10
T2_TARGET_SEC=15
SEARCH_SCHED_CONCURRENCY=16
SEARCH_SCHED_MAX_CONC=32

# Search & Recency (optional)
# Only items newer than RECENT_MAX_MIN are posted unless disabled.
RECENT_MAX_MIN=15
# Cold-start window for posting older finds until first post happens
RECENT_BOOTSTRAP_MIN=60
# Disable recency filter and use ingest age cap instead
# DISABLE_RECENT_FILTER=1
# When recency is disabled, cap ingest age to avoid flooding the queue.
# Example: 86400000 = 24h
# INGEST_MAX_AGE_MS=86400000
SEARCH_HEDGE=1

# Search limiter (adaptive)
SEARCH_CONCURRENCY=24
SEARCH_TARGET_RPM=600
SEARCH_MIN_RPM=120
SEARCH_MAX_RPM=2000
SEARCH_ADAPTIVE=1
SEARCH_INC_FACTOR=1.1
SEARCH_DEC_FACTOR=0.8
SEARCH_429_RATE_THR=0.05

# Posting / Webhooks
# Number of webhooks to provision per channel (fanout). Raising this alone will not
# bypass Discord rate limits; prefer per-route queueing with backoff.
WEBHOOKS_PER_CHANNEL=6

# Global posting concurrency (across all routes) managed by Bottleneck
DISCORD_POST_CONCURRENCY=8
DISCORD_POST_CONCURRENCY_MAX=16

# Global QPS guardrails; auto-tuned down when 429s occur. Keep conservative.
DISCORD_QPS_MIN=10
DISCORD_QPS_MAX=80

# Per-route concurrency (per webhook route). Keep at 1 to avoid 429 bursts.
DISCORD_ROUTE_MAX_CONC=1

# Do not migrate jobs between webhooks when one is cooling down (prevents 429 cascades)
MIGRATE_ON_COOLDOWN=0

# Micro-batching: bundle up to N embeds within this small window per route
POST_BATCHING=1
POST_BATCH_EMBEDS_MAX=5
POST_BATCH_WINDOW_MS=250

FRESH_FASTPATH_MS=120000

# Diagnostics (optional)
DIAG_TIMING=1
# LOG_LEVEL=debug
# LOG_ROUTE=1

# Dedupe scope
# Prefer 'per_rule' or 'channel' for healthy fanout. Avoid global unless necessary.
# DEDUPE_SCOPE=per_rule
# CROSS_RULE_DEDUP=0

