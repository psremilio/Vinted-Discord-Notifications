# Fast posting defaults (tune per deployment)

# Parent & Fanout
FANOUT_ALWAYS_PARENT=1
FANOUT_MIRROR_TO_PARENT=1
MONO_QUARANTINE_DISABLE=1

# Hot tiers / intervals
TIER_HOT_GLOBS=*-all,*-all-*â‚¬
T0_TARGET_SEC=6
T1_TARGET_SEC=10
T2_TARGET_SEC=15
SEARCH_SCHED_CONCURRENCY=16
SEARCH_SCHED_MAX_CONC=32

# Search & Recency (optional)
# Only items newer than RECENT_MAX_MIN are posted unless disabled.
RECENT_MAX_MIN=5
# Cold-start window for posting older finds until first post happens
RECENT_BOOTSTRAP_MIN=60
# Disable recency filter and use ingest age cap instead (not recommended)
# DISABLE_RECENT_FILTER=1
# When recency is disabled, cap ingest age to avoid flooding the queue.
# Example: 86400000 = 24h
# INGEST_MAX_AGE_MS=86400000
MAX_ITEM_AGE_MS=300000
SEARCH_HEDGE=1

# Search limiter (adaptive)
SEARCH_CONCURRENCY=16
SEARCH_TARGET_RPM=300
SEARCH_MIN_RPM=120
SEARCH_MAX_RPM=800
SEARCH_ADAPTIVE=1
SEARCH_ADAPTIVE_MODE=conservative
SEARCH_INC_FACTOR=1.05
SEARCH_DEC_FACTOR=0.7
SEARCH_429_RATE_THR=0.01
SEARCH_PERIOD_MIN_MS=3000
SEARCH_PERIOD_MAX_MS=8000

# Posting / Webhooks
# Number of webhooks to provision per channel (fanout). Raising this alone will not
# bypass Discord rate limits; prefer per-route queueing with backoff.
WEBHOOKS_PER_CHANNEL=6

# Global posting concurrency (across all routes). No global QPS; per-bucket pacing is used.
DISCORD_POST_CONCURRENCY=8
DISCORD_POST_CONCURRENCY_MAX=16

## NOTE: No global QPS limiter (token bucket per Discord bucket instead)
# DISCORD_QPS_MIN and DISCORD_QPS_MAX are ignored.
# DISCORD_QPS_MIN=10
# DISCORD_QPS_MAX=80

# Per-route concurrency (per webhook route). Keep at 1 to avoid 429 bursts.
DISCORD_ROUTE_MAX_CONC=1

# Do not migrate jobs between webhooks when one is cooling down (prevents 429 cascades)
MIGRATE_ON_COOLDOWN=0

# Micro-batching: bundle up to N embeds within this small window per route
POST_BATCHING=0
POST_BATCH_EMBEDS_MAX=2
POST_BATCH_WINDOW_MS=200

# Discord token bucket safety gap (ms) to pad header reset-after
DISCORD_SAFE_GAP_MS=150

# Force removal of flags from webhook payloads (avoid SUPPRESS_EMBEDS)
FORCE_NO_FLAGS=1

FRESH_FASTPATH_MS=120000

# Diagnostics (optional)
DIAG_TIMING=1
# LOG_LEVEL=debug
# LOG_ROUTE=1

# Dedupe scope
# Prefer 'per_rule' for healthy cross-posting across rules/price tiers.
DEDUPE_SCOPE=per_rule
# Dedupe TTL in seconds (e.g., 86400 = 1 day)
DEDUPE_TTL_SEC=86400
# CROSS_RULE_DEDUP=0

# Webhook-Handling
WEBHOOKS_PER_CHANNEL=6
WEBHOOK_ENSURE_INTERVAL_MS=900000
WEBHOOK_ENSURE_JITTER_MS=30000
FORCE_NO_FLAGS=1

# Posting
POST_VIA_WEBHOOK_ONLY=1
POST_BATCHING=0
DISCORD_ROUTE_MAX_CONC=1
MIGRATE_ON_COOLDOWN=1
DISCORD_SAFE_GAP_MS=150
DISCORD_POST_GLOBAL_CONC=32
DISCORD_NO_PROXY=1

# Freshness
FRESH_FASTPATH_MS=120000
DROP_OLD_AFTER_MS=900000
MAX_ITEM_AGE_MS=60000
CAP_BASE=999
CAP_WHEN_Q_HIGH=20
Q_HIGH_THRESHOLD=400
HOT_AGE_MS=20000

# Channel preflight
STRICT_CHANNELS=0
# Proxy robustness
CHECK_TIMEOUT_SEC=12
COOLDOWN_MIN=10
PROXY_FAIL_MAX=2
HEDGE_REQUESTS=2
HEDGE_REQUESTS_MAX=2
HEDGE_DELAY_MS=150
HEDGE_CUT_THR=0.03
HEDGE_LIMIT_RATE=0.10
HEDGE_DISABLE_RATE=0.50
PROXY_MAX_RETRIES=2
FETCH_TIMEOUT_MS=6000
RETRY_DELAY_MS=500
PROXY_429_BACKOFF_MS=60000
PROXY_429_BACKOFF_MAX_MS=300000
PROXY_403_COOLDOWN_MS=600000
PROXY_TLS_COOLDOWN_MS=120000
PROXY_FAIL403_RATE_THR=0.2
PROXY_FAILTLS_RATE_THR=0.1
PROXY_FAIL_WINDOW_MS=60000
PROXY_HEALTHY_CAP=200
PROXY_PERMA_FAILS=4
PROXY_AUTH_TTL_MS=43200000
# Proxies (robust boot)
PROXIES_FILE=/app/config/proxies.txt
PROXY_LIST_FILE=/app/config/proxies.txt
PROXY_LIST_URL=
LIST_REFRESH_MIN=60
# Comma-separated provider URLs. Falls back to PROXY_LIST_URL and PS_API_KEY/SERVICE_ID.
PROXY_LIST_URLS=
PROXY_DL_ATTEMPTS=6
PROXY_DL_BACKOFF_MS=1500
# Optional inline fallback: "ip:port,ip:port"
PROXIES_INLINE=
PROXY_DEFAULT_USERNAME=
PROXY_DEFAULT_PASSWORD=
PS_AUTH_MODE=ip
PROXY_PROBE_URL=https://api.ipify.org?format=json
HEADERS_CH_UA=1
ALLOW_DIRECT_ON_EMPTY=1
ALLOW_DIRECT_ON_HEDGE_FAIL=0

# Token/session handling
TOKEN_AUTO_BOOTSTRAP=1
TOKEN_BOOTSTRAP_ALLOW_DIRECT=0
TOKEN_RETRY_ON_401=1
TOKEN_PERSIST_PATH=./data/tokens.json
# Streams-based posting (optional)
POST_VIA_STREAMS=0
REDIS_URL=
STREAM_PREFIX=stream:posts:
POST_GROUP=poster
SHARDS=1
SHARD_INDEX=0
STREAM_BATCH=10
STREAM_BLOCK_MS=2000
POSTER_MAX_INFLIGHT=64
POSTER_PER_CHANNEL_MAX_INFLIGHT=1
# Posting via local spool queues (optional)
POST_VIA_LOCAL_SPOOL=0

# Aggregator/Poster caps
POSTER_MAX_INFLIGHT=128
POSTER_PER_CHANNEL_MAX_INFLIGHT=1
HOT_AGE_MS=20000
DRAIN_MODE_ON_QUEUE=800
MULTI_EMBEDS_PER_MSG=10

# Spool persistence
SPOOL_DIR=./spool
SPOOL_FLUSH_MS=2000
SPOOL_MAX_BYTES=10485760

# Stall handling
STALL_RELOAD_DEBOUNCE_MS=180000
# Scheduler safe-mode
SAFE_MODE_MIN_HEALTHY=10
SAFE_MODE_LOG_INTERVAL_MS=30000
